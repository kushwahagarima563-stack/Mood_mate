"use strict";(()=>{var e={};e.id=5116,e.ids=[5116],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},83401:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>m,patchFetch:()=>x,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>c});var o={};t.r(o),t.d(o,{GET:()=>p});var s=t(49303),a=t(88716),i=t(60670),n=t(87070),u=t(72331);async function p(){try{let e=await u._.musicLog.findMany({orderBy:{played_at:"desc"}}),r=await u._.faceEmotionLog.findMany({orderBy:{createdAt:"desc"}});return n.NextResponse.json({musicLogs:e,faceEmotionLogs:r})}catch(e){return console.error(e),n.NextResponse.json({error:"Failed to fetch logs"},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/musiclogs/logs/route",pathname:"/api/musiclogs/logs",filename:"route",bundlePath:"app/api/musiclogs/logs/route"},resolvedPagePath:"C:\\Users\\Garima\\Desktop\\Mood_mate\\app\\api\\musiclogs\\logs\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:g}=l,m="/api/musiclogs/logs/route";function x(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:c})}},72331:(e,r,t)=>{t.d(r,{_:()=>s});var o=t(53524);let s=global.prisma||new o.PrismaClient({log:["query"]})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[9276,5972],()=>t(83401));module.exports=o})();