"use strict";(()=>{var e={};e.id=5241,e.ids=[5241],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63850:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>x,patchFetch:()=>v,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c});var t={};s.r(t),s.d(t,{GET:()=>u});var o=s(49303),i=s(88716),n=s(60670),a=s(87070),p=s(72331);async function u(e,{params:r}){let{id:s}=r;if(!s)return a.NextResponse.json({error:"Session ID is required"},{status:400});try{let e=await p._.message.findMany({where:{sessionId:s},orderBy:{createdAt:"asc"}});return a.NextResponse.json(e)}catch(e){return console.error(`Error in GET /api/sessions/${s}:`,e),a.NextResponse.json({error:"Internal Server Error"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/sessions/[id]/route",pathname:"/api/sessions/[id]",filename:"route",bundlePath:"app/api/sessions/[id]/route"},resolvedPagePath:"C:\\Users\\Garima\\Desktop\\Mood_mate\\app\\api\\sessions\\[id]\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:l,staticGenerationAsyncStorage:c,serverHooks:m}=d,x="/api/sessions/[id]/route";function v(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}},72331:(e,r,s)=>{s.d(r,{_:()=>o});var t=s(53524);let o=global.prisma||new t.PrismaClient({log:["query"]})}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[9276,5972],()=>s(63850));module.exports=t})();