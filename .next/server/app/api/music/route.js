"use strict";(()=>{var e={};e.id=990,e.ids=[990],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39727:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>x,patchFetch:()=>f,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g});var r={};s.r(r),s.d(r,{DELETE:()=>d,GET:()=>l,POST:()=>c});var a=s(49303),o=s(88716),i=s(60670),n=s(87070);let u=new(s(53524)).PrismaClient;async function c(e){try{let{emotion:t,weather:s,song_title:r,song_id:a,played_at:o}=await e.json();if(!t||!s||!r||!a)return n.NextResponse.json({error:"Missing required fields: emotion, weather, song_title, song_id"},{status:400});let i=await u.musicLog.create({data:{emotion:t,weather:s,song_title:r,song_id:a,played_at:o?new Date(o):new Date}});return n.NextResponse.json({success:!0,data:i,message:"Music log created successfully"},{status:201})}catch(e){return console.error("Error creating music log:",e),n.NextResponse.json({error:"Failed to create music log",details:e.message},{status:500})}}async function l(e){try{let{searchParams:t}=new URL(e.url),s=t.get("emotion"),r=t.get("weather"),a=parseInt(t.get("limit")||"50"),o={};s&&(o.emotion=s),r&&(o.weather=r);let i=await u.musicLog.findMany({where:o,orderBy:{played_at:"desc"},take:a});return n.NextResponse.json({success:!0,count:i.length,data:i},{status:200})}catch(e){return console.error("Error fetching music logs:",e),n.NextResponse.json({error:"Failed to fetch music logs",details:e.message},{status:500})}}async function d(e){try{let{searchParams:t}=new URL(e.url),s=t.get("id");if(!s)return n.NextResponse.json({error:"Missing required parameter: id"},{status:400});let r=await u.musicLog.delete({where:{id:s}});return n.NextResponse.json({success:!0,data:r,message:"Music log deleted successfully"},{status:200})}catch(e){return console.error("Error deleting music log:",e),n.NextResponse.json({error:"Failed to delete music log",details:e.message},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/music/route",pathname:"/api/music",filename:"route",bundlePath:"app/api/music/route"},resolvedPagePath:"C:\\Users\\Garima\\Desktop\\Mood_mate\\app\\api\\music\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:h}=p,x="/api/music/route";function f(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[9276,5972],()=>s(39727));module.exports=r})();